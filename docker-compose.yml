version: '3.8'

services:
  # Frontend application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      - NODE_ENV=production
      - PUBLIC_URL=/
      - VITE_BASE_URL=/
      - VITE_API_URL=/api
      - HOST=0.0.0.0
      - POSTGRES_HOST=db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=taskmanager
      - DATABASE_URL=postgresql://admin:password@db:5432/taskmanager
    networks:
      - task-manager-network
    volumes:
      - app-data:/app/data
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    depends_on:
      - db

  # Database
  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: taskmanager
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - task-manager-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d taskmanager"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Database management UI
  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@taskforce.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - task-manager-network
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M

  # Reverse proxy for security and SSL termination
  # Enable this when deploying to production with HTTPS
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - task-manager-network
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/healthz || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  task-manager-network:
    driver: bridge

volumes:
  app-data:
    driver: local
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local
