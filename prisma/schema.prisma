
// This is your Prisma schema file
// Learn more about it at https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  name            String
  email           String    @unique
  passwordHash    String
  role            UserRole  @default(USER)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  department      Department? @relation(fields: [departmentId], references: [id])
  departmentId    String?
  tasks           Task[]
  personDetails   Person?
}

enum UserRole {
  ADMIN
  SUPERVISOR
  USER
}

model Department {
  id        String   @id
  name      String
  colorCode String
  people    Person[]
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Exemption {
  id          String   @id
  name        String
  description String
  people      Person[] @relation("PersonExemptions")
  tasks       Task[]   @relation("TaskProhibitedExemptions")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Person {
  id              String      @id
  name            String
  email           String      @unique
  phone           String
  available       Boolean     @default(true)
  emergencyContact String
  department      Department  @relation(fields: [departmentId], references: [id])
  departmentId    String
  exemptions      Exemption[] @relation("PersonExemptions")
  tasks           Task[]
  user            User        @relation(fields: [userId], references: [id])
  userId          String      @unique
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Task {
  id                    String       @id
  title                 String
  description           String
  status                TaskStatus   @default(PENDING)
  priority              TaskPriority @default(MEDIUM)
  dueDate               DateTime
  assignedPerson        Person?      @relation(fields: [assignedPersonId], references: [id])
  assignedPersonId      String?
  requiredSkills        String[]
  prohibitedExemptions  Exemption[]  @relation("TaskProhibitedExemptions")
  assignedBy            User         @relation(fields: [assignedById], references: [id])
  assignedById          String
  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @updatedAt
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}
